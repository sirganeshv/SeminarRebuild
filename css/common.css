/* Main CSS file for site */
/* TODO(sgomes): Figure out what to do about desktop font sizes. */
/* TODO(sgomes): Figure out what to do about i18n and i18n font sizes. */
/**
 * The css property used for elevation. In most cases this should not be changed. It is exposed
 * as a variable for abstraction / easy use when needing to reference the property directly, for
 * example in a `will-change` rule.
 */
/**
 * The default duration value for elevation transitions.
 */
/**
 * The default easing value for elevation transitions.
 */
/**
 * Applies the correct css rules to an element to give it the elevation specified by $z-value.
 * The $z-value must be between 0 and 24.
 */
/**
 * Returns a string that can be used as the value for a `transition` property for elevation.
 * Calling this function directly is useful in situations where a component needs to transition
 * more than one property.
 *
 * ```scss
 * .foo {
 *   transition: mdc-elevation-transition-rule(), opacity 100ms ease;
 *   will-change: $mdc-elevation-property, opacity;
 * }
 * ```
 */
/**
 * Applies the correct css rules needed to have an element transition between elevations.
 * This mixin should be applied to elements whose elevation values will change depending on their
 * context (e.g. when active or disabled).
 */
@font-face {
  font-family: "Roboto Regular";
  src: url("/fonts/Roboto-Regular.woff") format("woff"); }
@font-face {
  font-family: "Roboto Medium";
  src: url("/fonts/Roboto-Medium.woff") format("woff"); }
/*
 Values that have set of four values are in the order,

      <top> <right> <bottom> <left>

*/
/* common values */
/* form values */
/* button values */
html, body {
  font-family: Roboto, sans-serif;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  width: 100%;
  height: 100%; }

/* header styles */
.header-container {
  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);
  max-height: 150px;
  text-align: center; }
  .header-container h1 {
    font-family: Roboto, sans-serif;
    -moz-osx-font-smoothing: grayscale;
    -webkit-font-smoothing: antialiased;
    font-size: 2.125rem;
    font-weight: 400;
    letter-spacing: normal;
    line-height: 2.5rem;
    text-decoration: inherit;
    text-transform: inherit;
    margin: unset;
    padding: 5px 0; }

/* main container styles */
.main-container {
  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);
  width: 640px;
  max-width: 90%;
  margin: 16px auto 24px auto; }

/* Media queries */
@media only screen and (max-height: 600px), screen and (max-width: 915px) {
  header img {
    display: none; } }
@media only screen and (max-width: 479px) {
  .main-container {
    /* turn off elevation on smaller screens */
    box-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12); } }

/*# sourceMappingURL=common.css.map */
